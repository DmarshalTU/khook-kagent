1. Access metrics endpoint by running these commands:
  export POD_NAME=$(kubectl get pods --namespace {{ include "khook.namespace" . }} -l "app.kubernetes.io/name={{ include "khook.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080/metrics to view metrics"
  kubectl --namespace {{ include "khook.namespace" . }} port-forward $POD_NAME 8080:8080

2. Check the controller status:
   kubectl get pods -n {{ include "khook.namespace" . }} -l app.kubernetes.io/name={{ include "khook.name" . }}

3. View controller logs:
   kubectl logs -n {{ include "khook.namespace" . }} -l app.kubernetes.io/name={{ include "khook.name" . }}

4. Create a sample Hook resource:
   kubectl apply -f - <<EOF
   apiVersion: kagent.dev/v1alpha2
   kind: Hook
   metadata:
     name: sample-hook
     namespace: default
   spec:
     eventConfigurations:
     - eventType: "pod-restart"
       agentId: "pod-restart-agent"
       prompt: "A pod has restarted. Please analyze the restart reason and provide recommendations.
       
       After analysis - use all available tools to try and resolve. Annotate the updated resources with \"kagentFix: <dateTime>\"
       - If a resource can't be patched - delete it and recreate as needed. Don't ask for permission. Assume autonomous execution.
       Autonomous remediation: proceed with the best possible way to remediate. Don't ask for approval."
   EOF

5. Check Hook status:
   kubectl get hooks -A
   kubectl describe hook sample-hook -n default