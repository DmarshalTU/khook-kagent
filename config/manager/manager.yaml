apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: kagent
  labels:
    app.kubernetes.io/name: kagent-hook-controller
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kagent-hook-controller
    app.kubernetes.io/part-of: kagent-hook-controller
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kagent-hook-controller
      app.kubernetes.io/instance: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: kagent-hook-controller
        app.kubernetes.io/instance: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        - --config=/etc/config/controller_manager_config.yaml
        image: controller:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        env:
        - name: KAGENT_API_URL
          valueFrom:
            configMapKeyRef:
              name: manager-config
              key: kagent-api-url
              optional: true
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: manager-config
              key: log-level
              optional: true
        - name: METRICS_BIND_ADDRESS
          value: ":8080"
        - name: HEALTH_PROBE_BIND_ADDRESS
          value: ":8081"
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: manager-config